{
	"info": {
		"_postman_id": "38c7291e-b1f1-4934-a8ed-7d4415a45089",
		"name": "Challenge Assignment Demo",
		"description": "This `collection` requires an `environment` with the following variables.\n\n- `AB_BASE_URL`\n- `AB_NAMESPACE`\n- `AB_CLIENT_ID`\n- `AB_CLIENT_SECRET`\n- `EXTEND_APP_NAME`\n- `GRPC_SERVER_URL` (for local deployment)\n    \n\nYou will need following permissions for the IAM Client.  \nFor AGS Private Cloud customers:\n\n- `ADMIN:NAMESPACE:{namespace}:CHALLENGE:PLUGIN [CREATE,READ,UPDATE,DELETE]`\n    \n- `NAMESPACE:{namespace}:CHALLENGE:PROGRESSION [READ]`\n    \n- `ADMIN:NAMESPACE:{namespace}:INFORMATION:USER:\\* [DELETE]`\n    \n\nFor AGS Shared Cloud customers:\n\n- Challenge -> Custom Configuration (Read, Create, Update, Delete)\n    \n- Challenge -> Challenge Progression (Read, Create, Update, Delete)\n    \n- IAM -> Users (Delete)\n    \n\nMake sure you have deployed Extend Service Extension app. Get `EXTEND_APP_NAME` from extend app page in admin portal. For local deployment, use local url and store it in `GRPC_SERVER_URL` instead.\n\nPlease read [getting started with challenge assignment customization](https://docs.accelbyte.io/gaming-services/services/extend/override/introduction-to-challenge-goals-assignment-customization/) for more information.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25409821"
	},
	"item": [
		{
			"name": "10-client-login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Store client access token in collection variable\", function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    \r",
							"    if (responseJson.access_token !== undefined) {\r",
							"        pm.collectionVariables.set('CLIENT_ACCESS_TOKEN', responseJson.access_token)\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{AB_CLIENT_SECRET}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{AB_CLIENT_ID}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/iam/v3/oauth/token",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"iam",
						"v3",
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "20-client-create-test-user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Store test user id, email, and password in collection variable\", function () {",
							"    var responseJson = pm.response.json();",
							"    ",
							"    if (responseJson.data[0].userId !== undefined) {",
							"        pm.collectionVariables.set('TEST_USER_ID', responseJson.data[0].userId)",
							"    }",
							"    if (responseJson.data[0].emailAddress !== undefined) {",
							"        pm.collectionVariables.set('TEST_USER_EMAIL', responseJson.data[0].emailAddress)",
							"    }",
							"    if (responseJson.data[0].password !== undefined) {",
							"        pm.collectionVariables.set('TEST_USER_PASSWORD', responseJson.data[0].password)",
							"    }",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"count\": 1,\n  \"userInfo\": {\n    \"country\": \"US\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/iam/v4/admin/namespaces/{{AB_NAMESPACE}}/test_users",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"iam",
						"v4",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"test_users"
					]
				}
			},
			"response": []
		},
		{
			"name": "21-test-user-login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Store test user access token in collection variable\", function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    \r",
							"    if (responseJson.access_token !== undefined) {\r",
							"        pm.collectionVariables.set('TEST_USER_ACCESS_TOKEN', responseJson.access_token)\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"followRedirects": false
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{AB_CLIENT_SECRET}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{AB_CLIENT_ID}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{TEST_USER_EMAIL}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{TEST_USER_PASSWORD}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/iam/v3/oauth/token",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"iam",
						"v3",
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "30-unregister-challenge-assignment",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{AB_BASE_URL}}/challenge/v1/admin/namespaces/{{AB_NAMESPACE}}/plugins/assignment",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"challenge",
						"v1",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"plugins",
						"assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "31-client-register challenge-assignment",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let extendAppName = pm.collectionVariables.get(\"EXTEND_APP_NAME\");",
							"if (!extendAppName || extendAppName == \"\")",
							"    extendAppName = pm.environment.get(\"EXTEND_APP_NAME\");",
							"",
							"let grpcServerUrl = pm.collectionVariables.get(\"GRPC_SERVER_URL\");",
							"if (!grpcServerUrl || grpcServerUrl == \"\")",
							"    grpcServerUrl = pm.environment.get(\"GRPC_SERVER_URL\");",
							"",
							"let body = JSON.parse(pm.request.body.raw);",
							"",
							"if (extendAppName && extendAppName !== \"\") {",
							"    body.appName = extendAppName;",
							"    body.extendType = \"APP\";",
							"} else if (grpcServerUrl && grpcServerUrl !== \"\") {",
							"    body.grpcServerAddress = grpcServerUrl;",
							"    body.extendType = \"CUSTOM\";",
							"} else {",
							"    pm.test(\"'EXTEND_APP_NAME' or 'GRPC_SERVER_URL' was set\", function () {",
							"        pm.expect(body.appName).to.be.a(\"string\").and.to.have.length.above(0);",
							"    });",
							"    pm.execution.skipRequest();",
							"}",
							"",
							"pm.request.body.raw = JSON.stringify(body);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/challenge/v1/admin/namespaces/{{AB_NAMESPACE}}/plugins/assignment",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"challenge",
						"v1",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"plugins",
						"assignment"
					]
				}
			},
			"response": []
		},
		{
			"name": "40-client-create-stat-code-1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let statCode1 = pm.collectionVariables.get(\"STAT_CODE_1\");",
							"if (!statCode1 || statCode1 == \"\")",
							"    statCode1 = pm.environment.get(\"STAT_CODE_1\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"statCode\": \"{{STAT_CODE_1}}\",\r\n  \"name\": \"Requirement stat\",\r\n  \"description\": \"\",\r\n  \"minimum\": 0,\r\n  \"maximum\": 100000,\r\n  \"defaultValue\": 0,\r\n  \"incrementOnly\": true,\r\n  \"setAsGlobal\": false,\r\n  \"setBy\": \"SERVER\",\r\n  \"tags\": [\"requirement\"]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/social/v1/admin/namespaces/{{AB_NAMESPACE}}/stats",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"social",
						"v1",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"stats"
					]
				}
			},
			"response": []
		},
		{
			"name": "41-client-create-stat-code-2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let statCode2 = pm.collectionVariables.get(\"STAT_CODE_2\");",
							"if (!statCode2 || statCode2 == \"\")",
							"    statCode2 = pm.environment.get(\"STAT_CODE_2\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"statCode\": \"{{STAT_CODE_2}}\",\r\n  \"name\": \"Experience points\",\r\n  \"description\": \"\",\r\n  \"minimum\": 0,\r\n  \"maximum\": 1000000,\r\n  \"defaultValue\": 0,\r\n  \"incrementOnly\": true,\r\n  \"setAsGlobal\": false,\r\n  \"setBy\": \"SERVER\",\r\n  \"tags\": [\"exp\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/social/v1/admin/namespaces/{{AB_NAMESPACE}}/stats",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"social",
						"v1",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"stats"
					]
				}
			},
			"response": []
		},
		{
			"name": "50-client-create-assignment-rule",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"assignmentRule\": \"CUSTOM\",\r\n  \"name\": \"Custom Challenge\",\r\n  \"code\": \"custom-challenge\",\r\n  \"description\": \"Challenge description\",\r\n  \"goalsVisibility\": \"PERIODONLY\",\r\n  \"rotation\": \"NONE\",\r\n  \"startDate\": \"2024-08-01T00:00:00Z\",\r\n  \"activeGoalsPerRotation\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/challenge/v1/admin/namespaces/{{AB_NAMESPACE}}/challenges",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"challenge",
						"v1",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"challenges"
					]
				}
			},
			"response": []
		},
		{
			"name": "60-client-create-challenge-code-1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"assignmentRule\": \"CUSTOM\",\r\n  \"name\": \"Custom Challenge\",\r\n  \"code\": \"custom-challenge\",\r\n  \"description\": \"Challenge description\",\r\n  \"goalsVisibility\": \"PERIODONLY\",\r\n  \"rotation\": \"NONE\",\r\n  \"startDate\": \"2024-08-01T00:00:00Z\",\r\n  \"activeGoalsPerRotation\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/challenge/v1/admin/namespaces/{{AB_NAMESPACE}}/challenges/custom-challenge/goals",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"challenge",
						"v1",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"challenges",
						"custom-challenge",
						"goals"
					]
				}
			},
			"response": []
		},
		{
			"name": "61-client-create-challenge-code-2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"test 2\",\r\n  \"code\": \"test-2\",\r\n  \"isActive\": true,\r\n  \"description\": \"Goal description\",\r\n  \"tags\": [\"test\"],\r\n  \"requirementGroups\": [\r\n    {\r\n      \"operator\": \"AND\",\r\n      \"predicates\": [\r\n        {\r\n          \"matcher\": \"GREATER_THAN_EQUAL\",\r\n          \"parameterName\": \"{{STAT_CODE_1}}\",\r\n          \"parameterType\": \"STATISTIC\",\r\n          \"targetValue\": 4000\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"rewards\": [\r\n    {\r\n      \"type\": \"STATISTIC\",\r\n      \"itemId\": \"{{STAT_CODE_2}}\",\r\n      \"itemName\": \"Experience points\",\r\n      \"qty\": 300\r\n    }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/challenge/v1/admin/namespaces/{{AB_NAMESPACE}}/challenges/custom-challenge/goals",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"challenge",
						"v1",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"challenges",
						"custom-challenge",
						"goals"
					]
				}
			},
			"response": []
		},
		{
			"name": "70-user-get-user-progression",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TEST_USER_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{AB_BASE_URL}}/challenge/v1/public/namespaces/{{AB_NAMESPACE}}//users/me/progress/custom-challenge",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"challenge",
						"v1",
						"public",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"",
						"users",
						"me",
						"progress",
						"custom-challenge"
					]
				}
			},
			"response": []
		},
		{
			"name": "90-client-delete-test-user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set('TEST_USER_ID', \"\");",
							"pm.collectionVariables.set('TEST_USER_EMAIL', \"\");",
							"pm.collectionVariables.set('TEST_USER_PASSWORD', \"\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{AB_BASE_URL}}/iam/v3/admin/namespaces/{{AB_NAMESPACE}}/users/{{TEST_USER_ID}}/information",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"iam",
						"v3",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"users",
						"{{TEST_USER_ID}}",
						"information"
					]
				}
			},
			"response": []
		},
		{
			"name": "91-client-delete-tied-challenge",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{AB_BASE_URL}}/challenge/v1/admin/namespaces/{{AB_NAMESPACE}}/challenges/custom-challenge/tied",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"challenge",
						"v1",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"challenges",
						"custom-challenge",
						"tied"
					]
				}
			},
			"response": []
		},
		{
			"name": "92-client-delete-stat-config-1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let statCode1 = pm.collectionVariables.get(\"STAT_CODE_1\");",
							"if (!statCode1 || statCode1 == \"\")",
							"    statCode1 = pm.environment.get(\"STAT_CODE_1\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{AB_BASE_URL}}/social/v1/admin/namespaces/{{AB_NAMESPACE}}/stats/{{STAT_CODE_1}}",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"social",
						"v1",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"stats",
						"{{STAT_CODE_1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "93-client-delete-stat-config-2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let statCode2 = pm.collectionVariables.get(\"STAT_CODE_2\");",
							"if (!statCode2 || statCode2 == \"\")",
							"    statCode2 = pm.environment.get(\"STAT_CODE_2\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{AB_BASE_URL}}/social/v1/admin/namespaces/{{AB_NAMESPACE}}/stats/{{STAT_CODE_2}}",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"social",
						"v1",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"stats",
						"{{STAT_CODE_2}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "CLIENT_ACCESS_TOKEN",
			"value": ""
		},
		{
			"key": "GRPC_SERVER_URL",
			"value": "",
			"type": "string"
		},
		{
			"key": "EXTEND_APP_NAME",
			"value": "",
			"type": "string"
		},
		{
			"key": "TEST_USER_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "TEST_USER_EMAIL",
			"value": "",
			"type": "string"
		},
		{
			"key": "TEST_USER_PASSWORD",
			"value": "",
			"type": "string"
		},
		{
			"key": "TEST_USER_ACCESS_TOKEN",
			"value": "",
			"type": "string"
		},
		{
			"key": "STAT_CODE_1",
			"value": "custom-requirements",
			"type": "string"
		},
		{
			"key": "STAT_CODE_2",
			"value": "exp",
			"type": "string"
		}
	]
}