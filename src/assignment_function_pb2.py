# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: assignment_function.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19\x61ssignment_function.proto\x12&accelbyte.challenge.assignmentFunction\x1a\x1fgoogle/protobuf/timestamp.proto\"s\n\x11\x41ssignmentRequest\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\x0e\n\x06userId\x18\x02 \x01(\t\x12;\n\x05goals\x18\x03 \x03(\x0b\x32,.accelbyte.challenge.assignmentFunction.Goal\"|\n\x12\x41ssignmentResponse\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\x0e\n\x06userId\x18\x02 \x01(\t\x12\x43\n\rassignedGoals\x18\x03 \x03(\x0b\x32,.accelbyte.challenge.assignmentFunction.Goal\"\xf0\x02\n\x04Goal\x12\x0c\n\x04\x63ode\x18\x01 \x01(\t\x12\x15\n\rchallengeCode\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x10\n\x08isActive\x18\x04 \x01(\x08\x12\x39\n\x04tags\x18\x05 \x03(\x0b\x32+.accelbyte.challenge.assignmentFunction.Tag\x12I\n\x0crequirements\x18\x06 \x03(\x0b\x32\x33.accelbyte.challenge.assignmentFunction.Requirement\x12?\n\x07rewards\x18\x07 \x03(\x0b\x32..accelbyte.challenge.assignmentFunction.Reward\x12-\n\tcreatedAt\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12-\n\tupdatedAt\x18\t \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"f\n\x0bRequirement\x12\x10\n\x08operator\x18\x01 \x01(\t\x12\x45\n\npredicates\x18\x02 \x03(\x0b\x32\x31.accelbyte.challenge.assignmentFunction.Predicate\"\x95\x01\n\tPredicate\x12\x15\n\rparameterName\x18\x01 \x01(\t\x12\x15\n\rparameterType\x18\x02 \x01(\t\x12\x0f\n\x07matcher\x18\x03 \x01(\t\x12\x13\n\x0btargetValue\x18\x04 \x01(\x02\x12\x18\n\x0bstatCycleId\x18\x05 \x01(\tH\x00\x88\x01\x01\x12\n\n\x02id\x18\x06 \x01(\tB\x0e\n\x0c_statCycleId\"J\n\x06Reward\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0e\n\x06itemId\x18\x02 \x01(\t\x12\x10\n\x08itemName\x18\x03 \x01(\t\x12\x10\n\x08quantity\x18\x04 \x01(\x02\"D\n\x05Goals\x12;\n\x05goals\x18\x01 \x03(\x0b\x32,.accelbyte.challenge.assignmentFunction.Goal\"\x13\n\x03Tag\x12\x0c\n\x04name\x18\x01 \x01(\t2\x98\x01\n\x12\x41ssignmentFunction\x12\x81\x01\n\x06\x41ssign\x12\x39.accelbyte.challenge.assignmentFunction.AssignmentRequest\x1a:.accelbyte.challenge.assignmentFunction.AssignmentResponse\"\x00\x42\x83\x01\n*net.accelbyte.challenge.assignmentFunctionP\x01Z*accelbyte.net/challenge/assignmentFunction\xaa\x02&AccelByte.Challenge.AssignmentFunctionb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'assignment_function_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n*net.accelbyte.challenge.assignmentFunctionP\001Z*accelbyte.net/challenge/assignmentFunction\252\002&AccelByte.Challenge.AssignmentFunction'
  _ASSIGNMENTREQUEST._serialized_start=102
  _ASSIGNMENTREQUEST._serialized_end=217
  _ASSIGNMENTRESPONSE._serialized_start=219
  _ASSIGNMENTRESPONSE._serialized_end=343
  _GOAL._serialized_start=346
  _GOAL._serialized_end=714
  _REQUIREMENT._serialized_start=716
  _REQUIREMENT._serialized_end=818
  _PREDICATE._serialized_start=821
  _PREDICATE._serialized_end=970
  _REWARD._serialized_start=972
  _REWARD._serialized_end=1046
  _GOALS._serialized_start=1048
  _GOALS._serialized_end=1116
  _TAG._serialized_start=1118
  _TAG._serialized_end=1137
  _ASSIGNMENTFUNCTION._serialized_start=1140
  _ASSIGNMENTFUNCTION._serialized_end=1292
# @@protoc_insertion_point(module_scope)
